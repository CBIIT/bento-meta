name: ci-cd

on: [push, pull_request]

jobs:
    ci:
        # Set up operating system
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./python
        strategy:
          matrix:
            python-version: ["3.8", "3.9", "3.10", "3.11"]

        # Define job steps
        steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        # - name: Display Python version
        #   run: python -c "import sys; print(sys.version)"

        - name: Check-out repository
          uses: actions/checkout@v3

        - name: Install poetry
          uses: snok/install-poetry@v1

        - name: Install package
          run: poetry install

        - name: Test with pytest
          run: poetry run pytest tests/ --cov=bento-meta --cov-report=xml

        - name: Use Codecov to track coverage
          uses: codecov/codecov-action@v2
          with:
            files: ./coverage.xml   # coverage report

        - name: Build documentation
          run: poetry run make html --directory docs/

    cd:
        # Only run this job if the "ci" job passes
        needs: ci

        # Only run this job if new work is pushed to the "master" branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'

        # Set up operating system
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./python
        strategy:
          matrix:
            python-version: ["3.8", "3.9", "3.10", "3.11"]

        # Define job steps
        steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Display Python version
          run: python -c "impor sys; print(sys.version)"

        - name: Check-out repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Install poetry
          uses: snok/install-poetry@v1

        - name: Install package
          run: poetry install

        - name: Use Python Semantic Release to prepare release
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            poetry run semantic-release publish

        - name: Publish to TestPyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.TEST_PYPI_API_TOKEN }}
            repository_url: https://test.pypi.org/legacy

        - name: Test install from TestPyPI
          run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            bento-meta

        - name: Publish to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}